{"version":3,"sources":["Questions.js","AskQuestion.js","Question.js","AnswerQuestion.js","App.js","index.js"],"names":["Questions","Component","Fragment","this","props","questions","map","question","key","_id","to","name","Question","getQuestion","id","content","answers","q","App","API_URL","process","state","getQuestions","then","console","log","url","fetch","result","json","setState","find","a","path","ReactDOM","render","document","getElementById"],"mappings":"qSAuBeA,GCrBWC,Y,iLDKV,OACI,kBAAC,IAAMC,SAAP,KACI,yCACA,4BACKC,KAAKC,MAAMC,UAAUC,KAAI,SAAAC,GAAQ,OAC9B,wBAAIC,IAAKD,EAASE,KACd,kBAAC,IAAD,CAAMC,GAAE,oBAAeH,EAASE,MAAQF,EAASI,gB,GAT7DV,cEqCTW,GCvCcX,Y,iLDIrB,IAAMM,EAAWJ,KAAKC,MAAMS,YAAYV,KAAKC,MAAMU,IAI/CC,EAAU,sCAcd,OAbIR,IACAQ,EACI,kBAAC,IAAMb,SAAP,KACI,4BAAKK,EAASI,MAEd,uCACA,4BACKJ,EAASS,QAAQV,KAAI,SAAAW,GAAC,OAAI,wBAAIT,IAAKS,GAAIA,OAG5C,kBAAC,IAAD,CAAMP,GAAG,KAAT,UAIR,kBAAC,IAAMR,SAAP,KAQKa,EAED,kBAAC,IAAD,CAAML,GAAG,KAAT,6B,GAhCOT,cEiDRiB,E,YA3CX,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAFVe,QAAUC,OAKN,EAAKC,MAAQ,CACThB,UAAW,IALA,E,iFASfF,KAAKmB,eAAeC,MAAK,kBAAMC,QAAQC,IAAI,mC,gKAIvCC,E,UAASvB,KAAKgB,Q,uBACCQ,MAAMD,G,cAArBE,E,gBACaA,EAAOC,O,cAApBA,E,yBACG1B,KAAK2B,SAAS,CACjBd,QAASa,K,wIAILf,GAER,OAAOX,KAAKkB,MAAML,QAAQe,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQK,O,+BAGxC,IAAD,OACL,OACI,kBAAC,IAAMZ,SAAP,KACI,0CACA,kBAAC,IAAD,KAEI,kBAAC,EAAD,CAAW+B,KAAK,IAAI5B,UAAWF,KAAKkB,MAAMhB,YAG1C,kBAAC,EAAD,CAAU4B,KAAK,gBACLpB,YAAa,SAAAC,GAAE,OAAI,EAAKD,YAAYC,Y,GAvChDb,aCFlBiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5ba6f142.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\nimport AskQuestion from \"./AskQuestion\";\r\n\r\nclass Questions extends Component {\r\n\r\n    render() {\r\n                return (\r\n                    <React.Fragment>\r\n                        <h3>Questions</h3>\r\n                        <ol>\r\n                            {this.props.questions.map(question =>\r\n                                <li key={question._id}>\r\n                                    <Link to={`/question/${question._id}`}>{question.name}</Link>\r\n\r\n                                </li>\r\n                            )}\r\n                        </ol>\r\n                    </React.Fragment>\r\n                );\r\n}\r\n}\r\n\r\nexport default Questions;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass AskQuestion extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: \"\"\r\n        }\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        })\r\n    }\r\n\r\n    onClick(event) {\r\n        this.props.askQuestion(this.state.input);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Ask Question</h3>\r\n                <input onChange={(event) => this.onChange(event)}\r\n                       type=\"text\" placeholder=\"Type question here!\"></input>\r\n                <button onClick={() => this.onClick()}>Ask!</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AskQuestion;\r\n\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"@reach/router\";\r\nimport AnswerQuestion from \"./AnswerQuestion\";\r\nclass Question extends Component {\r\n\r\n    render() {\r\n        const question = this.props.getQuestion(this.props.id);\r\n\r\n        /*const list = question.answers.map(ans => <li>{ans.text}\r\n            - ({ans.votes})</li>);*/\r\n        let content = <p>Loading</p>\r\n        if (question) {\r\n            content =\r\n                <React.Fragment>\r\n                    <h1>{question.name}</h1>\r\n\r\n                    <h3>Answers</h3>\r\n                    <ul>\r\n                        {question.answers.map(q => <li key={q}>{q}</li>)}\r\n                    </ul>\r\n\r\n                    <Link to=\"/\">Back</Link>\r\n                </React.Fragment>\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {/*<h3>Question!</h3>\r\n                <p key={question.id}>{question.name}</p>\r\n\r\n                <ul>\r\n                    {question.answers.length === 0 ? <p>No Answers!</p> : list}\r\n                </ul>\r\n                <AnswerQuestion answerQuestion={(text) => this.props.answerQuestion(text)}></AnswerQuestion>*/}\r\n                {content}\r\n\r\n                <Link to=\"/\">Go back to questions</Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question;\r\n\r\n","import React, {Component} from 'react';\r\n\r\nclass AnswerQuestion extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            input: \"\"\r\n        }\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({\r\n            input: event.target.value\r\n        })\r\n    }\r\n\r\n    onClick(event) {\r\n        this.props.answerQuestion(this.state.input);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Answer Question</h3>\r\n                <input onChange={(event) => this.onChange(event)}\r\n                       type=\"text\" placeholder=\"Type answer here!\"></input>\r\n                <button onClick={() => this.onClick()}>Answer!</button>\r\n            </React.Fragment>\r\n        )\r\n\r\n        console.log(this.props.answerQuestion());\r\n    }\r\n}\r\n\r\nexport default AnswerQuestion;\r\n","import React, {Component} from 'react';\r\nimport { Router } from \"@reach/router\";\r\n\r\nimport Questions from \"./Questions\";\r\nimport Question from \"./Question\";\r\n\r\nclass App extends Component {\r\n\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // This is my state data initialized\r\n        this.state = {\r\n            questions: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getQuestions().then(() => console.log(\"questions have been gotten\"));\r\n    }\r\n\r\n    async getQuestions() {\r\n        let url = `${this.API_URL}/questions`;\r\n        let result = await fetch(url); //get the data\r\n        let json = await result.json(); //turn data into JSON\r\n        return this.setState({\r\n            answers: json //set it in the state\r\n        })\r\n    }\r\n\r\n    getQuestion(id){\r\n        //find question by id\r\n        return this.state.answers.find(a => a._id === id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>QA Website</h1>\r\n                <Router>\r\n\r\n                    <Questions path=\"/\" questions={this.state.questions}\r\n                       /* askQuestion={(text) => this.askQuestion(text)}*/>\r\n                    </Questions>\r\n                    <Question path=\"/question/:id\"\r\n                              getQuestion={id => this.getQuestion(id)}></Question>\r\n                </Router>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}